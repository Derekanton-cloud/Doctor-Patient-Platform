<% console.log('Rendering doctorDetails page for:', doctor); %>
  <% console.log('Doctor object:', doctor); %>
    <!DOCTYPE html>
    <html lang="en">

    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Doctor Details | Doctor-Patient Interface</title>
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
      <link rel="icon" href="/favicon.ico" type="image/x-icon">
      <style>
        /* Global Styles */
        * {
          margin: 0;
          padding: 0;
          box-sizing: border-box;
          font-family: 'Arial', sans-serif;
        }

        html,
        body {
          height: 100%;
          width: 100%;
          scroll-behavior: smooth;
          overflow-x: hidden;
        }

        body {
          display: flex;
          flex-direction: column;
          min-height: 100vh;
          margin: 0;
          background: linear-gradient(135deg, #abdded, #92e1e9);
        }

        /* Navbar Styles */
        .navbar {
          display: flex;
          justify-content: space-between;
          align-items: center;
          padding: 15px 20px;
          background: linear-gradient(135deg, #000000, #1a1a1a);
          color: whitesmoke;
          position: sticky;
          top: 0;
          width: 100%;
          z-index: 1000;
          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        }

        .navbar-logo {
          display: flex;
          align-items: center;
          gap: 10px;
          cursor: pointer;
          text-decoration: none;
          color: white;
        }

        .navbar-logo img {
          width: 40px;
          height: auto;
        }

        .navbar-logo h1 {
          font-size: 24px;
          margin: 0;
          transition: color 0.3s ease, text-shadow 0.3s ease;
        }

        .navbar-logo:hover h1 {
          color: #a4d2ff;
          text-shadow: 0 4px 12px rgba(30, 144, 255, 0.7);
        }

        .navbar-links {
          display: flex;
          align-items: center;
          gap: 25px;
        }

        .navbar-links a {
          color: white;
          text-decoration: none;
          font-size: 16px;
          transition: color 0.3s, transform 0.3s;
        }

        .navbar-links a:hover {
          color: #a4d2ff;
          transform: translateY(-2px);
          text-shadow: 0 4px 12px rgba(30, 144, 255, 0.7);
        }

        .nav-button {
          display: flex;
          align-items: center;
          gap: 8px;
          background-color: rgba(255, 255, 255, 0.1);
          color: white;
          padding: 8px 16px;
          border-radius: 20px;
          text-decoration: none;
          transition: all 0.3s ease;
          font-weight: 500;
          border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .nav-button:hover {
          background: #047cde;
          color: white;
          border-color: #047cde;
          transform: translateY(-3px);
          box-shadow: 0 5px 15px rgba(4, 124, 222, 0.3);
        }

        /* Profile Dropdown Styles */
        .profile-dropdown {
          position: relative;
          display: inline-block;
        }

        .profile-button {
          background-color: #047cde;
          color: white;
          width: 40px;
          height: 40px;
          border-radius: 50%;
          border: none;
          display: flex;
          align-items: center;
          justify-content: center;
          cursor: pointer;
          transition: all 0.3s ease;
          font-size: 18px;
          box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }

        .profile-button:hover {
          background-color: #0366b3;
          transform: translateY(-2px);
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        }

        .dropdown-content {
          display: none;
          position: absolute;
          right: 0;
          background-color: white;
          min-width: 200px;
          box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
          border-radius: 8px;
          z-index: 1;
          overflow: hidden;
          animation: fadeIn 0.3s ease;
        }

        .profile-dropdown:hover .dropdown-content {
          display: block;
        }

        .dropdown-content a {
          color: #333;
          padding: 12px 16px;
          text-decoration: none;
          display: flex;
          align-items: center;
          gap: 10px;
          transition: background-color 0.3s;
        }

        .dropdown-content a i {
          color: #047cde;
          width: 16px;
        }

        .dropdown-content a:hover {
          background-color: #f5f5f5;
        }

        .dropdown-divider {
          height: 1px;
          background-color: #e9ecef;
          margin: 0;
        }

        /* Main Content */
        .main-content {
          flex: 1;
          padding: 2rem;
          max-width: 1200px;
          margin: 0 auto;
          width: 100%;
        }

        /* Doctor Profile Header */
        .doctor-profile-header {
          background: white;
          border-radius: 15px;
          padding: 2rem;
          margin-bottom: 2rem;
          box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
          position: relative;
        }

        .profile-cover {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 180px;
          border-radius: 15px 15px 0 0;
          background: linear-gradient(135deg, #047cde, #00c6ff);
          overflow: hidden;
        }

        .profile-cover::before {
          content: '';
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background-image: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4z' fill='%23ffffff' fill-opacity='0.15' fill-rule='evenodd'/%3E%3C/svg%3E");
          opacity: 0.8;
        }

        .profile-header-content {
          position: relative;
          padding-top: 100px;
          display: flex;
          align-items: flex-end;
          margin-bottom: 1rem;
        }

        .doctor-avatar-large {
          width: 150px;
          height: 150px;
          border-radius: 50%;
          border: 5px solid white;
          object-fit: cover;
          margin-right: 2rem;
          box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
          background-color: #047cde;
          display: flex;
          align-items: center;
          justify-content: center;
          color: white;
          font-size: 50px;
        }

        .doctor-profile-info {
          flex: 1;
        }

        .doctor-profile-name {
          font-size: 2rem;
          font-weight: 700;
          margin-bottom: 0.5rem;
          color: #333;
        }

        .doctor-profile-specialty {
          font-size: 1.2rem;
          color: #047cde;
          margin-bottom: 1rem;
          display: flex;
          align-items: center;
          gap: 8px;
        }

        .doctor-profile-specialty i {
          color: #047cde;
        }

        .doctor-profile-meta {
          display: flex;
          gap: 1.5rem;
          color: #666;
          margin-bottom: 1.5rem;
        }

        .meta-item {
          display: flex;
          align-items: center;
          gap: 8px;
        }

        .meta-item i {
          color: #047cde;
        }

        .doctor-profile-action {
          margin-top: 20px;
        }

        /* Content Sections */
        .content-section {
          background: white;
          border-radius: 15px;
          padding: 2rem;
          margin-bottom: 2rem;
          box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
          animation: fadeIn 0.5s;
        }

        .section-title {
          font-size: 1.5rem;
          font-weight: 600;
          margin-bottom: 1.5rem;
          color: #333;
          display: flex;
          align-items: center;
          gap: 10px;
        }

        .section-title i {
          color: #047cde;
        }

        /* Availability Schedule */
        .schedule-grid {
          display: grid;
          grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
          gap: 1.5rem;
        }

        .schedule-card {
          background: #f8f9fa;
          border-radius: 10px;
          padding: 1.5rem;
          border-left: 4px solid #047cde;
          transition: all 0.3s;
        }

        .schedule-card:hover {
          transform: translateY(-5px);
          box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .schedule-day {
          font-weight: 600;
          font-size: 1.2rem;
          margin-bottom: 0.8rem;
          color: #333;
        }

        .schedule-time {
          display: flex;
          align-items: center;
          gap: 10px;
          color: #555;
        }

        .schedule-time i {
          color: #047cde;
        }

        /* Appointment Booking Form */
        .appointment-form {
          display: grid;
          grid-template-columns: repeat(2, 1fr);
          gap: 1.5rem;
        }

        .form-group {
          margin-bottom: 1rem;
        }

        .form-group-full {
          grid-column: 1 / -1;
        }

        .form-group label {
          display: block;
          margin-bottom: 0.5rem;
          font-weight: 500;
          color: #555;
        }

        .form-control {
          width: 100%;
          padding: 0.8rem 1rem;
          border: 1px solid #ced4da;
          border-radius: 5px;
          font-size: 1rem;
          transition: border-color 0.3s;
        }

        .form-control:focus {
          border-color: #047cde;
          outline: none;
          box-shadow: 0 0 0 3px rgba(4, 124, 222, 0.1);
        }

        .form-actions {
          grid-column: 1 / -1;
          display: flex;
          justify-content: flex-end;
          gap: 1rem;
          margin-top: 1rem;
        }

        /* Buttons */
        .btn {
          padding: 0.8rem 1.5rem;
          border-radius: 5px;
          font-size: 1rem;
          font-weight: 500;
          cursor: pointer;
          transition: all 0.3s;
          border: none;
          display: inline-flex;
          align-items: center;
          gap: 8px;
        }

        .btn-primary {
          background: #047cde;
          color: white;
        }

        .btn-primary:hover {
          background: #0366b3;
          transform: translateY(-2px);
          box-shadow: 0 4px 8px rgba(4, 124, 222, 0.3);
        }

        /* Doctor Info Tabs */
        .doctor-tabs {
          display: flex;
          border-bottom: 1px solid #e9ecef;
          margin-bottom: 1.5rem;
        }

        .tab {
          padding: 0.8rem 1.2rem;
          cursor: pointer;
          transition: all 0.3s;
          border-bottom: 2px solid transparent;
          color: #666;
          font-weight: 500;
        }

        .tab.active {
          border-bottom: 2px solid #047cde;
          color: #047cde;
        }

        /* Toast Notification */
        .toast {
          position: fixed;
          bottom: 20px;
          right: 20px;
          background: white;
          color: #333;
          padding: 12px 20px;
          border-radius: 4px;
          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
          display: flex;
          align-items: center;
          gap: 10px;
          z-index: 9999;
          opacity: 0;
          transform: translateY(20px);
          transition: all 0.3s;
        }

        .toast.success {
          border-left: 4px solid #4CAF50;
        }

        .toast.error {
          border-left: 4px solid #F44336;
        }

        .toast.show {
          opacity: 1;
          transform: translateY(0);
        }

        .toast-icon {
          width: 24px;
          height: 24px;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
          font-size: 14px;
        }

        .toast.success .toast-icon {
          background-color: rgba(76, 175, 80, 0.1);
          color: #4CAF50;
        }

        .toast.error .toast-icon {
          background-color: rgba(244, 67, 54, 0.1);
          color: #F44336;
        }

        .toast-message {
          flex: 1;
        }

        .toast-close {
          cursor: pointer;
          opacity: 0.7;
          transition: opacity 0.3s;
        }

        .toast-close:hover {
          opacity: 1;
        }

        /* Footer Styles */
        .footer {
          background: linear-gradient(135deg, #000000, #1a1a1a);
          color: #fff;
          padding: 30px 0;
          position: relative;
          margin-top: auto;
        }

        .footer-content {
          max-width: 1200px;
          margin: 0 auto;
          display: grid;
          grid-template-columns: repeat(3, 1fr);
          gap: 40px;
          padding: 0 20px;
        }

        .footer-section {
          display: flex;
          flex-direction: column;
          align-items: flex-start;
        }

        .footer-logo {
          display: flex;
          align-items: center;
          gap: 10px;
          margin-bottom: 20px;
        }

        .footer-logo img {
          width: 40px;
          height: auto;
        }

        .footer-logo h3 {
          font-size: 1.5rem;
          margin: 0;
          color: #fff;
        }

        .footer-section h4 {
          color: #a4d2ff;
          margin-bottom: 20px;
          font-size: 1.2rem;
        }

        .footer-section p {
          margin: 5px 0;
          color: #999;
          line-height: 1.6;
        }

        .footer-section .social-links {
          display: flex;
          gap: 15px;
          margin-top: 20px;
        }

        .social-links a {
          color: #fff;
          text-decoration: none;
          transition: color 0.3s ease;
        }

        .social-links a:hover {
          color: #a4d2ff;
        }

        .footer-bottom {
          text-align: center;
          margin-top: 40px;
          padding-top: 20px;
          border-top: 1px solid rgba(255, 255, 255, 0.1);
        }

        .footer-bottom p {
          color: #666;
          font-size: 0.9rem;
        }

        /* Doctor Reviews */
        .reviews-section {
          margin-top: 2rem;
        }

        .review-card {
          border-bottom: 1px solid #e9ecef;
          padding: 1.5rem 0;
        }

        .review-card:last-child {
          border-bottom: none;
        }

        .review-header {
          display: flex;
          justify-content: space-between;
          margin-bottom: 0.8rem;
        }

        .reviewer-info {
          display: flex;
          align-items: center;
          gap: 12px;
        }

        .reviewer-avatar {
          width: 40px;
          height: 40px;
          border-radius: 50%;
          background: #f1f1f1;
          display: flex;
          align-items: center;
          justify-content: center;
          color: #666;
        }

        .reviewer-name {
          font-weight: 500;
        }

        .review-rating {
          display: flex;
          gap: 4px;
          color: #ffc107;
        }

        .review-date {
          color: #888;
          font-size: 0.9rem;
        }

        .review-content {
          color: #555;
          line-height: 1.5;
        }

        .toast {
          position: fixed;
          bottom: 30px;
          right: 30px;
          background-color: white;
          border-radius: 8px;
          box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
          display: none;
          z-index: 1000;
          min-width: 300px;
          max-width: 400px;
          transform: translateY(100px);
          transition: all 0.3s ease;
        }

        .toast.show {
          display: block;
          transform: translateY(0);
        }

        .toast.success {
          border-left: 5px solid #28a745;
        }

        .toast.error {
          border-left: 5px solid #dc3545;
        }

        .toast-content {
          display: flex;
          align-items: center;
          padding: 15px;
        }

        .toast-icon {
          background: #f5f5f5;
          border-radius: 50%;
          width: 40px;
          height: 40px;
          display: flex;
          align-items: center;
          justify-content: center;
          margin-right: 15px;
          flex-shrink: 0;
        }

        .toast.success .toast-icon {
          color: #28a745;
        }

        .toast.error .toast-icon {
          color: #dc3545;
        }

        .toast-message {
          flex-grow: 1;
          font-size: 14px;
          color: #333;
        }

        .toast-close {
          background: transparent;
          border: none;
          color: #888;
          cursor: pointer;
          font-size: 16px;
          display: flex;
          align-items: center;
          justify-content: center;
          width: 24px;
          height: 24px;
          border-radius: 50%;
          transition: background 0.2s;
        }

        .toast-close:hover {
          background: #f2f2f2;
        }

        .available-slots {
          margin-top: 20px;
        }

        .slot-day {
          margin-bottom: 20px;
        }

        .slot-buttons {
          display: flex;
          flex-wrap: wrap;
          gap: 10px;
        }

        .slot-button {
          background-color: #047cde;
          color: white;
          border: none;
          padding: 10px 15px;
          border-radius: 5px;
          cursor: pointer;
          transition: background-color 0.3s ease;
        }

        .slot-button:hover {
          background-color: #0366b3;
        }

        .available-slots-container {
          margin-bottom: 40px;
        }

        .slots-grid {
          display: grid;
          grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
          gap: 20px;
          margin-top: 25px;
        }

        .day-card {
          background-color: white;
          border-radius: 12px;
          box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
          overflow: hidden;
          transition: transform 0.3s ease, box-shadow 0.3s ease;
          animation: fadeInUp 0.5s;
        }

        .day-card:hover {
          transform: translateY(-5px);
          box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
        }

        .day-header {
          background: linear-gradient(135deg, #047cde, #0366b3);
          color: white;
          padding: 15px 20px;
          position: relative;
        }

        .day-name {
          font-size: 1.2rem;
          font-weight: 600;
          margin-bottom: 5px;
        }

        .day-hours {
          font-size: 0.85rem;
          opacity: 0.9;
        }

        .slot-list {
          padding: 15px;
          display: flex;
          flex-wrap: wrap;
          gap: 8px;
        }

        .time-category {
          width: 100%;
          color: #666;
          font-size: 0.85rem;
          font-weight: 500;
          padding: 10px 5px 5px;
          margin-top: 5px;
          border-bottom: 1px dashed #e0e0e0;
          display: flex;
          align-items: center;
          gap: 8px;
        }

        .slot-button {
          background-color: #f8f9fa;
          border: 1px solid #e0e0e0;
          color: #333;
          border-radius: 8px;
          padding: 10px 15px;
          cursor: pointer;
          transition: all 0.3s ease;
          display: flex;
          align-items: center;
          gap: 8px;
          font-size: 0.9rem;
          font-weight: 500;
          width: calc(50% - 4px);
          justify-content: center;
        }

        .slot-button:hover {
          background-color: #047cde;
          color: white;
          transform: translateY(-2px);
          box-shadow: 0 4px 8px rgba(4, 124, 222, 0.2);
        }

        /* Time of day styling */
        .slot-button.morning {
          border-left: 3px solid #ffc107;
        }

        .slot-button.afternoon {
          border-left: 3px solid #28a745;
        }

        .slot-button.evening {
          border-left: 3px solid #6f42c1;
        }

        .slot-button.morning:hover {
          background-color: #ffc107;
          color: #212529;
        }

        .slot-button.afternoon:hover {
          background-color: #28a745;
        }

        .slot-button.evening:hover {
          background-color: #6f42c1;
        }

        .time-category .fa-sun {
          color: #ffc107;
        }

        .time-category .fa-cloud-sun {
          color: #28a745;
        }

        .time-category .fa-moon {
          color: #6f42c1;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
          .slot-button {
            width: 100%;
          }
        }

        @keyframes fadeInUp {
          from {
            opacity: 0;
            transform: translateY(20px);
          }

          to {
            opacity: 1;
            transform: translateY(0);
          }
        }

        /* Animation */
        @keyframes fadeIn {
          from {
            opacity: 0;
          }

          to {
            opacity: 1;
          }
        }

        @keyframes slideDown {
          from {
            transform: translateY(-50px);
            opacity: 0;
          }

          to {
            transform: translateY(0);
            opacity: 1;
          }
        }

        @keyframes fadeInUp {
          from {
            opacity: 0;
            transform: translateY(20px);
          }

          to {
            opacity: 1;
            transform: translateY(0);
          }
        }
      </style>
    </head>

    <body>
      <!-- Navbar -->
      <nav class="navbar">
        <a href="/" class="navbar-logo">
          <img src="/assets/logo.png" alt="Logo">
          <h1>Doctor-Patient Interface</h1>
        </a>
        <div class="navbar-links">
          <a href="/patient/dashboard" class="nav-button">
            <i class="fas fa-columns"></i> Dashboard
          </a>
          <a href="/patient/appointments" class="nav-button">
            <i class="fas fa-calendar-check"></i> My Appointments
          </a>
          <div class="profile-dropdown">
            <button class="profile-button">
              <i class="fas fa-user-circle"></i>
            </button>
            <div class="dropdown-content">
              <a href="/patient/profile"><i class="fas fa-id-card"></i> View Profile</a>
              <a href="/patient/medical-history"><i class="fas fa-notes-medical"></i> Medical History</a>
              <a href="/patient/settings"><i class="fas fa-cog"></i> Settings</a>
              <div class="dropdown-divider"></div>
              <a href="/auth/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
            </div>
          </div>
        </div>
      </nav>

      <% if (message) { %>
        <div class="alert <%= type === 'success' ? 'alert-success' : 'alert-error' %>">
          <%= message %>
        </div>
        <% } %>

          <!-- Main Content -->
          <div class="main-content">
            <!-- Doctor Profile Header -->
            <div class="doctor-profile-header">
              <div class="profile-cover"></div>
              <div class="profile-header-content">
                <% if(doctor.profileImage) { %>
                  <img src="<%= doctor.profileImage %>" alt="Doctor Avatar" class="doctor-avatar-large">
                  <% } else { %>
                    <div class="doctor-avatar-large">
                      <i class="fas fa-user-md"></i>
                    </div>
                    <% } %>
                      <div class="doctor-profile-info">
                        <h1 class="doctor-profile-name">Dr. <%= doctor.firstName %>
                            <%= doctor.lastName %>
                        </h1>
                        <div class="doctor-profile-specialty">
                          <i class="fas fa-stethoscope"></i>
                          <span>
                            <%= doctor.specialization %>
                          </span>
                        </div>
                        <div class="doctor-profile-meta">
                          <div class="meta-item">
                            <i class="fas fa-envelope"></i>
                            <span>
                              <%= doctor.email %>
                            </span>
                          </div>
                          <div class="meta-item">
                            <i class="fas fa-phone"></i>
                            <span>
                              <%= doctor.phone %>
                            </span>
                          </div>
                          <div class="meta-item">
                            <i class="fas fa-hospital"></i>
                            <span>
                              <%= doctor.currentWorkingHospital || 'Not provided' %>
                            </span>
                          </div>
                          <div class="meta-item">
                            <i class="fas fa-map-marker-alt"></i>
                            <span>
                              <%= doctor.address || 'Not provided' %>
                            </span>
                          </div>
                        </div>
                        <div class="doctor-profile-rating">
                          <i class="fas fa-star" style="color: #ffc107;"></i>
                          <i class="fas fa-star" style="color: #ffc107;"></i>
                          <i class="fas fa-star" style="color: #ffc107;"></i>
                          <i class="fas fa-star" style="color: #ffc107;"></i>
                          <i class="fas fa-star-half-alt" style="color: #ffc107;"></i>
                          <span style="margin-left: 5px; color: #666;">(4.5)</span>
                        </div>
                      </div>
              </div>

              <div class="doctor-tabs">
                <div class="tab active" data-tab="overview">Overview</div>
                <div class="tab" data-tab="schedule">Schedule</div>
                <div class="tab" data-tab="reviews">Reviews</div>
              </div>
            </div>

            <!-- Doctor Overview -->
            <div class="content-section" id="overview-content">
              <div class="section-title">
                <i class="fas fa-user-md"></i> About Dr. <%= doctor.firstName %>
                  <%= doctor.lastName %>
              </div>
              <p style="line-height: 1.6; color: #555; margin-bottom: 20px;">
                Dr. <%= doctor.firstName %>
                  <%= doctor.lastName %> is a highly experienced <%= doctor.specialization %> with
                      <%= doctor.experience || 5 %> years of experience. <%= doctor.bio || `Specializing in various
                          aspects of ${doctor.specialization}, Dr. ${doctor.lastName} has helped numerous patients
                          recover and maintain their health. The doctor is known for providing patient-centered care
                          with a focus on preventive measures and holistic treatment approaches.` %>
              </p>

              <div class="section-title" style="margin-top: 30px;">
                <i class="fas fa-graduation-cap"></i> Education & Experience
              </div>
              <div style="margin-bottom: 20px;">
                <div style="margin-bottom: 15px;">
                  <h4 style="font-size: 1.1rem; margin-bottom: 5px;"><i class="fas fa-university"
                      style="color: #047cde; margin-right: 8px;"></i> MD in <%= doctor.specialization %>
                  </h4>
                  <p style="color: #666; margin-left: 28px;">Johns Hopkins University School of Medicine</p>
                  <p style="color: #888; margin-left: 28px; font-size: 0.9rem;">2010 - 2014</p>
                </div>
                <div>
                  <h4 style="font-size: 1.1rem; margin-bottom: 5px;"><i class="fas fa-briefcase"
                      style="color: #047cde; margin-right: 8px;"></i> Senior <%= doctor.specialization %>
                  </h4>
                  <p style="color: #666; margin-left: 28px;">
                    <%= doctor.currentWorkingHospital || 'Mayo Clinic' %>
                  </p>
                  <p style="color: #888; margin-left: 28px; font-size: 0.9rem;">2018 - Present</p>
                </div>
              </div>
            </div>

            <!-- Doctor Schedule -->
            <!-- Available Appointment Timings Section -->
            <div class="content-section" id="schedule-content">
              <div class="available-slots-container">
                <div class="section-title">
                  <i class="fas fa-calendar-alt"></i> Available Appointment Timings
                </div>

                <div class="slots-grid">
                  <% doctor.availableSlots.forEach(slot=> { %>
                    <div class="day-card">
                      <div class="day-header">
                        <div class="day-name">
                          <%= slot.day %>
                        </div>
                        <div class="day-hours">
                          <%= slot.startTime %> - <%= slot.endTime %>
                        </div>
                      </div>

                      <div class="slot-list">
  <% 
    const startTime = new Date(`1970-01-01T${slot.startTime}`);
    const endTime = new Date(`1970-01-01T${slot.endTime}`);
    const duration = slot.slotDuration || 15;
    let currentTime = new Date(startTime);
    let timeCategory = '';
    
    while (currentTime < endTime) { 
      // Determine time of day for color coding
      const hour = currentTime.getHours();
      let newCategory = '';
      
      if (hour < 12) {
        newCategory = 'morning';
      } else if (hour < 17) {
        newCategory = 'afternoon';
      } else {
        newCategory = 'evening';
      }
      
      // Display category heading when it changes
      if (newCategory !== timeCategory) {
        timeCategory = newCategory;
  %>
        <div class="time-category">
          <i class="fas <%= timeCategory === 'morning' ? 'fa-sun' : timeCategory === 'afternoon' ? 'fa-cloud-sun' : 'fa-moon' %>"></i>
          <%= timeCategory.charAt(0).toUpperCase() + timeCategory.slice(1) %>
        </div>
  <% } %>
      
      <form action="/patient/schedule-appointment" method="POST" class="slot-form">
        <input type="hidden" name="doctorId" value="<%= doctor._id %>">
        <input type="hidden" name="date" value="<%= new Date().toISOString().split('T')[0] %>">
        <input type="hidden" name="time" value="<%= currentTime.toTimeString().substring(0, 5) %>">
        <input type="hidden" name="reason" value="General Consultation">
        
        <% if (!user) { %>
          <!-- Guest booking fields -->
          <div class="guest-fields">
            <input type="text" name="guestName" placeholder="Your name" required>
            <input type="email" name="guestEmail" placeholder="Your email" required>
            <input type="tel" name="guestPhone" placeholder="Your phone" required>
          </div>
        <% } %>
        
        <button type="submit" class="slot-button <%= timeCategory %>">
          <i class="far fa-clock"></i>
          <span><%= currentTime.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}) %></span>
        </button>
      </form>
      
  <% 
      currentTime.setMinutes(currentTime.getMinutes() + duration);
    } 
  %>
</div>
                    </div>
                    <% }); %>
                </div>
              </div>


              <div class="section-title" style="margin-top: 30px;">
                <i class="fas fa-calendar-check"></i> Book an Appointment
              </div>

              <form id="appointmentForm" class="appointment-form">
                <input type="hidden" id="doctorId" name="doctorId" value="<%= doctor._id || '' %>">

                <div class="form-group">
                  <label for="date">Select Date</label>
                  <input type="date" id="date" name="date" class="form-control" required>
                </div>

                <div class="form-group">
                  <label for="time">Select Time</label>
                  <select id="time" name="time" class="form-control" required>
                    <option value="" disabled selected>Select a time slot</option>
                  </select>
                </div>

                <div class="form-group-full">
                  <label for="reason">Reason for Visit</label>
                  <textarea id="reason" name="reason" class="form-control" rows="3"
                    placeholder="Please describe your symptoms or reason for the appointment" required></textarea>
                </div>

                <div class="form-actions">
                  <button type="submit" class="btn btn-primary">
                    <i class="fas fa-calendar-check"></i> Book Appointment
                  </button>
                </div>
              </form>
            </div>

            <!-- Toast Notification -->
            <div id="toast" class="toast">
              <div class="toast-content">
                <div class="toast-icon">
                  <i class="fas fa-check"></i>
                </div>
                <div class="toast-message">Appointment booked successfully!</div>
                <button class="toast-close"><i class="fas fa-times"></i></button>
              </div>
            </div>

            <!-- Doctor Reviews -->
            <div class="content-section" id="reviews-content" style="display: none;">
              <div class="section-title">
                <i class="fas fa-star"></i> Patient Reviews
              </div>

              <div class="reviews-section">
                <div class="review-card">
                  <div class="review-header">
                    <div class="reviewer-info">
                      <div class="reviewer-avatar">
                        <i class="fas fa-user"></i>
                      </div>
                      <div>
                        <div class="reviewer-name">James Wilson</div>
                        <div class="review-rating">
                          <i class="fas fa-star"></i>
                          <i class="fas fa-star"></i>
                          <i class="fas fa-star"></i>
                          <i class="fas fa-star"></i>
                          <i class="fas fa-star"></i>
                        </div>
                      </div>
                    </div>
                    <div class="review-date">March 15, 2025</div>
                  </div>
                  <div class="review-content">
                    Dr. <%= doctor.lastName %> was extremely professional and knowledgeable. The diagnosis was spot on,
                      and
                      the treatment worked perfectly. I highly recommend!
                  </div>
                </div>

                <div class="review-card">
                  <div class="review-header">
                    <div class="reviewer-info">
                      <div class="reviewer-avatar">
                        <i class="fas fa-user"></i>
                      </div>
                      <div>
                        <div class="reviewer-name">Sarah Johnson</div>
                        <div class="review-rating">
                          <i class="fas fa-star"></i>
                          <i class="fas fa-star"></i>
                          <i class="fas fa-star"></i>
                          <i class="fas fa-star"></i>
                          <i class="far fa-star"></i>
                        </div>
                      </div>
                    </div>
                    <div class="review-date">February 28, 2025</div>
                  </div>
                  <div class="review-content">
                    Very detailed explanation of my condition. Took time to answer all my questions. The office staff
                    was
                    also
                    very friendly and helpful.
                  </div>
                </div>

                <div class="review-card">
                  <div class="review-header">
                    <div class="reviewer-info">
                      <div class="reviewer-avatar">
                        <i class="fas fa-user"></i>
                      </div>
                      <div>
                        <div class="reviewer-name">Michael Thomas</div>
                        <div class="review-rating">
                          <i class="fas fa-star"></i>
                          <i class="fas fa-star"></i>
                          <i class="fas fa-star"></i>
                          <i class="fas fa-star"></i>
                          <i class="fas fa-star-half-alt"></i>
                        </div>
                      </div>
                    </div>
                    <div class="review-date">January 12, 2025</div>
                  </div>
                  <div class="review-content">
                    Outstanding care and attention to detail. Dr. <%= doctor.lastName %> truly listens to patients and
                      provides comprehensive care. Would definitely recommend to friends and family.
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Toast Notification -->
          <div id="toast" class="toast">
            <div class="toast-icon">
              <i class="fas fa-check"></i>
            </div>
            <div class="toast-message">Appointment booked successfully</div>
            <div class="toast-close">
              <i class="fas fa-times"></i>
            </div>
          </div>

          <!-- Footer -->
          <footer class="footer">
            <div class="footer-content">
              <div class="footer-section">
                <div class="footer-logo">
                  <img src="/assets/logo.png" alt="Logo">
                  <h3>Doctor-Patient Interface</h3>
                </div>
                <p>Revolutionizing healthcare through seamless connectivity and innovative technology.</p>
              </div>

              <div class="footer-section">
                <h4>Contact Us</h4>
                <p>Email: doctorpatientinterface@gmail.com</p>
                <p>Phone: 9901527481</p>
                <p>Address: Shavige Malleshwara Hills, 91st Main Rd, Bengaluru, Karnataka 560078</p>
              </div>

              <div class="footer-section">
                <h4>Quick Links</h4>
                <p><a href="/patient/dashboard" style="color: #999; text-decoration: none;">Dashboard</a></p>
                <p><a href="/patient/appointments" style="color: #999; text-decoration: none;">My Appointments</a></p>
                <p><a href="/patient/settings" style="color: #999; text-decoration: none;">Settings</a></p>
                <div class="social-links">
                  <a href="#"><i class="fab fa-facebook"></i></a>
                  <a href="#"><i class="fab fa-twitter"></i></a>
                  <a href="#"><i class="fab fa-linkedin"></i></a>
                  <a href="#"><i class="fab fa-instagram"></i></a>
                </div>
              </div>
            </div>
            <div class="footer-bottom">
              <p>&copy; 2025 Doctor-Patient Interface. All Rights Reserved.</p>
              <p>Developed By Team DPI</p>
            </div>
          </footer>

          <script>
            document.addEventListener('DOMContentLoaded', function () {
              // Tab switching
              const tabs = document.querySelectorAll('.tab');
              const contents = {
                'overview': document.getElementById('overview-content'),
                'schedule': document.getElementById('schedule-content'),
                'reviews': document.getElementById('reviews-content')
              };

              tabs.forEach(tab => {
                tab.addEventListener('click', function () {
                  // Remove active class from all tabs
                  tabs.forEach(t => t.classList.remove('active'));
                  // Add active class to clicked tab
                  this.classList.add('active');

                  // Hide all content
                  Object.values(contents).forEach(content => {
                    content.style.display = 'none';
                  });

                  // Show selected content
                  contents[this.dataset.tab].style.display = 'block';
                });
              });

              // Appointment form submission
              const appointmentForm = document.getElementById('appointmentForm');
              const toast = document.getElementById('toast');
              const toastMessage = document.querySelector('.toast-message');
              const toastClose = document.querySelector('.toast-close');

              appointmentForm.addEventListener('submit', async function (e) {
                e.preventDefault();

                const formData = {
                  date: document.getElementById('date').value,
                  time: document.getElementById('time').value,
                  reason: document.getElementById('reason')?.value
                };

                try {
                  const response = await fetch('<%= `/doctors/${doctor._id}/book-appointment` %>', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData),
                  });

                  const data = await response.json();

                  if (data.success) {
                    showToast('Appointment booked successfully', 'success');
                    appointmentForm.reset();
                  } else {
                    showToast(data.message || 'Failed to book appointment', 'error');
                  }
                } catch (error) {
                  console.error('Error booking appointment:', error);
                  showToast('Network error while booking appointment', 'error');
                }
              });

              // Toast functionality
              toastClose.addEventListener('click', function () {
                toast.classList.remove('show');
              });

              function showToast(message, type = 'success') {
                toastMessage.textContent = message;
                toast.className = 'toast ' + type;

                const toastIcon = document.querySelector('.toast-icon i');
                if (type === 'success') {
                  toastIcon.className = 'fas fa-check';
                } else {
                  toastIcon.className = 'fas fa-exclamation-circle';
                }

                toast.classList.add('show');

                // Hide toast after 5 seconds
                setTimeout(() => {
                  toast.classList.remove('show');
                }, 5000);
              }

              const profileButton = document.querySelector('.profile-button');
              const dropdownContent = document.querySelector('.dropdown-content');

              // Optional click handler if you want to toggle on click instead of hover
              profileButton.addEventListener('click', function (e) {
                e.stopPropagation();
                dropdownContent.classList.toggle('show');
              });

              // Close dropdown when clicking outside
              document.addEventListener('click', function () {
                if (dropdownContent.classList.contains('show')) {
                  dropdownContent.classList.remove('show');
                }
              });
            });
          </script>

          <script>
            document.addEventListener('DOMContentLoaded', function () {
              // Get references to form elements
              const dateInput = document.getElementById('date');
              const timeSelect = document.getElementById('time');

              const availableSlots = JSON.parse('<%= JSON.stringify(doctor.availableSlots || []) %>');

              dateInput.addEventListener('change', function () {
                timeSelect.innerHTML = '<option value="" disabled selected>Select a time slot</option>';

                if (!this.value) return;

                const selectedDate = new Date(this.value);
                const dayOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][selectedDate.getDay()];

                const slotsForDay = availableSlots.filter(slot => slot.day === dayOfWeek);

                if (slotsForDay.length === 0) {
                  const noSlotsOption = document.createElement('option');
                  noSlotsOption.disabled = true;
                  noSlotsOption.textContent = 'No available slots for this day';
                  timeSelect.appendChild(noSlotsOption);
                  return;
                }

                slotsForDay.forEach(slot => {
                  const startTime = parseTimeString(slot.startTime);
                  const endTime = parseTimeString(slot.endTime);
                  const duration = slot.slotDuration || 30;

                  let currentTime = new Date(startTime);
                  while (currentTime < endTime) {
                    const option = document.createElement('option');
                    option.value = formatTime(currentTime);
                    option.textContent = formatTime(currentTime);
                    timeSelect.appendChild(option);

                    currentTime.setMinutes(currentTime.getMinutes() + duration);
                  }
                });
              });

              // Helper function to parse time string (HH:MM) to Date object
              function parseTimeString(timeStr) {
                const [hours, minutes] = timeStr.split(':').map(Number);
                const date = new Date();
                date.setHours(hours, minutes, 0, 0);
                return date;
              }

              // Helper function to format Date to time string (HH:MM)
              function formatTime(date) {
                return date.toTimeString().substring(0, 5);
              }
            });
          </script>

          <script>
            document.addEventListener('DOMContentLoaded', function () {
              // Get form elements
              const appointmentForm = document.getElementById('appointmentForm');
              const dateInput = document.getElementById('date');
              const timeSelect = document.getElementById('time');

              // Store available slots
              const availableSlots = JSON.parse('<%= JSON.stringify(doctor.availableSlots || []) %>');

              // Set minimum date to today
              const today = new Date();
              const yyyy = today.getFullYear();
              let mm = today.getMonth() + 1;
              let dd = today.getDate();
              if (dd < 10) dd = '0' + dd;
              if (mm < 10) mm = '0' + mm;
              dateInput.min = `${yyyy}-${mm}-${dd}`;

              // Handle date selection
              dateInput.addEventListener('change', function () {
                // Clear existing time options
                timeSelect.innerHTML = '<option value="" disabled selected>Select a time slot</option>';

                if (!this.value) return;

                const selectedDate = new Date(this.value);
                const dayOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][selectedDate.getDay()];

                // Find matching slots for the selected day
                const matchingSlots = availableSlots.filter(slot => slot.day === dayOfWeek);

                if (matchingSlots.length === 0) {
                  const noOption = document.createElement('option');
                  noOption.disabled = true;
                  noOption.textContent = 'No available slots on this day';
                  timeSelect.appendChild(noOption);
                  return;
                }

                // Generate time slots based on slot duration
                matchingSlots.forEach(slot => {
                  const start = parseTimeString(slot.startTime);
                  const end = parseTimeString(slot.endTime);
                  const duration = parseInt(slot.slotDuration) || 15; // in minutes

                  let current = new Date(start);
                  while (current < end) {
                    const timeStr = formatTime(current);
                    const option = document.createElement('option');
                    option.value = timeStr;
                    option.textContent = timeStr;
                    timeSelect.appendChild(option);

                    // Move to next slot
                    current.setMinutes(current.getMinutes() + duration);
                  }
                });
              });

              // Handle form submission
              // Handle form submission
              appointmentForm.addEventListener('submit', async function (e) {
                e.preventDefault();

                const formData = {
                  doctorId: document.getElementById('doctorId').value,
                  date: dateInput.value,
                  time: timeSelect.value,
                  reason: document.getElementById('reason').value,
                };

                try {
                  const response = await fetch('/patient/schedule-appointment', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData),
                  });

                  const result = await response.json();

                  if (result.success) {
                    showToast(result.message, 'success');
                    appointmentForm.reset();

                    // Redirect to appointments page after short delay
                    setTimeout(() => {
                      window.location.href = '/patient/appointments';
                    }, 2000);
                  } else {
                    showToast(result.message, 'error');
                  }
                } catch (error) {
                  console.error('Error booking appointment:', error);
                  showToast('Failed to book appointment. Please try again.', 'error');
                }
              });
              // Helper functions for time parsing
              function parseTimeString(timeStr) {
                const [hours, minutes] = timeStr.split(':').map(Number);
                const date = new Date();
                date.setHours(hours, minutes, 0, 0);
                return date;
              }

              function formatTime(date) {
                let hours = date.getHours();
                let minutes = date.getMinutes();
                const ampm = hours >= 12 ? 'PM' : 'AM';

                hours = hours % 12;
                hours = hours ? hours : 12; // Convert 0 to 12
                minutes = minutes < 10 ? '0' + minutes : minutes;

                return `${hours}:${minutes} ${ampm}`;
              }

              // Toast notification
              const toast = document.getElementById('toast');
              const toastClose = document.querySelector('.toast-close');

              toastClose.addEventListener('click', function () {
                toast.classList.remove('show');
              });

              function showToast(message, type = 'success') {
                const toastMessage = document.querySelector('.toast-message');
                const toastIcon = document.querySelector('.toast-icon i');

                toastMessage.textContent = message;
                toast.className = 'toast ' + type;

                if (type === 'success') {
                  toastIcon.className = 'fas fa-check';
                } else {
                  toastIcon.className = 'fas fa-exclamation-circle';
                }

                toast.classList.add('show');

                // Auto hide after 5 seconds
                setTimeout(() => {
                  toast.classList.remove('show');
                }, 5000);
              }
            });
          </script>

          <script>
            document.addEventListener('DOMContentLoaded', function () {
              const dateInput = document.getElementById('date');
              const timeSelect = document.getElementById('time');
              const availableSlots = JSON.parse('<%= JSON.stringify(doctor.availableSlots || []) %>');

              // Set minimum date to today
              const today = new Date();
              const yyyy = today.getFullYear();
              let mm = today.getMonth() + 1;
              let dd = today.getDate();
              if (dd < 10) dd = '0' + dd;
              if (mm < 10) mm = '0' + mm;
              dateInput.min = `${yyyy}-${mm}-${dd}`;

              // Populate time slots based on selected date
              dateInput.addEventListener('change', function () {
                timeSelect.innerHTML = '<option value="" disabled selected>Select a time slot</option>';

                if (!this.value) return;

                const selectedDate = new Date(this.value);
                const dayOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][selectedDate.getDay()];

                const slotsForDay = availableSlots.filter(slot => slot.day === dayOfWeek);

                if (slotsForDay.length === 0) {
                  const noSlotsOption = document.createElement('option');
                  noSlotsOption.disabled = true;
                  noSlotsOption.textContent = 'No available slots for this day';
                  timeSelect.appendChild(noSlotsOption);
                  return;
                }

                slotsForDay.forEach(slot => {
                  const startTime = parseTimeString(slot.startTime);
                  const endTime = parseTimeString(slot.endTime);
                  const duration = slot.slotDuration || 15;

                  let currentTime = new Date(startTime);
                  while (currentTime < endTime) {
                    const option = document.createElement('option');
                    option.value = formatTime(currentTime);
                    option.textContent = formatTime(currentTime);
                    timeSelect.appendChild(option);

                    currentTime.setMinutes(currentTime.getMinutes() + duration);
                  }
                });
              });

              // Helper functions for time parsing
              function parseTimeString(timeStr) {
                const [hours, minutes] = timeStr.split(':').map(Number);
                const date = new Date();
                date.setHours(hours, minutes, 0, 0);
                return date;
              }

              function formatTime(date) {
                return date.toTimeString().substring(0, 5);
              }
            });
          </script>

    </body>

    </html>